name: "Continuous Deployment â€“ Job Build and Push"

on:
  workflow_call:
    inputs:
      setup-qemu:
        type: boolean
        required: false
        default: false

      build-image:
        type: boolean
        required: false
        default: true

      push-image:
        type: boolean
        required: false
        default: true

      image-name:
        type: string
        required: true

      image-tag:
        type: string
        required: true
    secrets:
      push-image-registry-url:
        required: false

      push-image-registry-username:
        required: false

      push-image-registry-token:
        required: false

# concurrency:
#   cancel-in-progress: false
#   group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  image-build-push:
    runs-on: ubuntu-latest

    permissions:
      # packages: write
      # attestations: write
      # id-token: write
      contents: read

    steps:
      - name: Set up QEMU
        if: ${{ inputs.setup-qemu == true }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Local build container image
      #   if: ${{ inputs.build-image == true }}
      #   uses: docker/build-push-action@v6
      #   with:
      #     push: false
      #     tags: cr.ladesa.local/docs
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      - name: Login into Registry
        if: ${{ inputs.push-image == true }}
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.push-image-registry-url }}
          username: ${{ secrets.push-image-registry-username }}
          password: ${{ secrets.push-image-registry-token }}

      - name: Build and push container image to the registry
        if: ${{ inputs.build-image == true }}
        uses: docker/build-push-action@v6
        with:
          push: ${{ inputs.push-image == true }}
          tags: ${{ secrets.push-image-registry-url }}/${{ inputs.image-name }}:${{ inputs.image-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
